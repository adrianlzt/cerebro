SIGQUIT: quit
PC=0x45d003 m=2 sigcode=0

goroutine 0 [idle]:
runtime.futex(0x1d15158, 0x0, 0x7f47c7c91d88, 0x0, 0x7f4700000000, 0x45cc96, 0x3c, 0x0, 0x7f47c7c91dd0, 0x410030, ...)
/usr/local/go/src/runtime/sys_linux_amd64.s:426 +0x23
runtime.futexsleep(0x1d15158, 0x0, 0xdf8475800)
/usr/local/go/src/runtime/os_linux.go:62 +0xd7
runtime.notetsleep_internal(0x1d15158, 0xdf8475800, 0x0)
/usr/local/go/src/runtime/lock_futex.go:174 +0xd0
runtime.notetsleep(0x1d15158, 0xdf8475800, 0xc877cdddbb601)
/usr/local/go/src/runtime/lock_futex.go:194 +0x56
runtime.sysmon()
/usr/local/go/src/runtime/proc.go:3805 +0x135
runtime.mstart1()
/usr/local/go/src/runtime/proc.go:1179 +0x11e
runtime.mstart()
/usr/local/go/src/runtime/proc.go:1149 +0x64

# waiting group de los input. Parece que solo debe terminar cuando cierre el programa (agent.go:426)
goroutine 1 [semacquire, 11 minutes]:
sync.runtime_Semacquire(0xc42020664c)
/usr/local/go/src/runtime/sema.go:47 +0x34
sync.(*WaitGroup).Wait(0xc420206640)
/usr/local/go/src/sync/waitgroup.go:131 +0x7a
github.com/influxdata/telegraf/agent.(*Agent).Run(0xc42015a0e0, 0xc4202b6180, 0x0, 0x0)
/home/ubuntu/telegraf-build/src/github.com/influxdata/telegraf/agent/agent.go:426 +0x54e
main.reloadLoop(0xc4202b6060, 0x1d37f30, 0x0, 0x0, 0x1d37f30, 0x0, 0x0, 0x1d37f30, 0x0, 0x0, ...)
/home/ubuntu/telegraf-build/src/github.com/influxdata/telegraf/cmd/telegraf/telegraf.go:234 +0xa46
main.main()
/home/ubuntu/telegraf-build/src/github.com/influxdata/telegraf/cmd/telegraf/telegraf.go:411 +0x65b

goroutine 17 [syscall, 11 minutes, locked to thread]:
runtime.goexit()
/usr/local/go/src/runtime/asm_amd64.s:2197 +0x1

goroutine 6 [syscall, 11 minutes]:
os/signal.signal_recv(0x0)
/usr/local/go/src/runtime/sigqueue.go:116 +0x104
os/signal.loop()
/usr/local/go/src/os/signal/signal_unix.go:22 +0x22
created by os/signal.init.1
/usr/local/go/src/os/signal/signal_unix.go:28 +0x41

# Plugin de docker conectando con el daemon?
goroutine 7285 [select]:
net/http.(*persistConn).roundTrip(0xc4209005a0, 0xc42094eb60, 0x0, 0x0, 0x0)
/usr/local/go/src/net/http/transport.go:1898 +0x974
net/http.(*Transport).RoundTrip(0xc4202ca000, 0xc4204e2a00, 0xc4202ca000, 0x0, 0x0)
/usr/local/go/src/net/http/transport.go:391 +0x74c
net/http.send(0xc4204e2a00, 0x1c1ad60, 0xc4202ca000, 0x0, 0xc400000000, 0x0, 0xc42015a8a0, 0xc420370dd8, 0x4124ed, 0xc42015a8a0)
/usr/local/go/src/net/http/client.go:249 +0x162
net/http.(*Client).send(0xc4203b5d70, 0xc4204e2a00, 0x0, 0x0, 0x0, 0xc42015a8a0, 0x0, 0x1, 0x44a8aa)
/usr/local/go/src/net/http/client.go:173 +0x108
net/http.(*Client).Do(0xc4203b5d70, 0xc4204e2a00, 0x0, 0x0, 0x0)
/usr/local/go/src/net/http/client.go:595 +0x254
github.com/docker/docker/vendor/golang.org/x/net/context/ctxhttp.Do.func1(0xc4203b5d70, 0xc4204e2a00, 0x14b8730, 0xc420ad4900)
/home/ubuntu/telegraf-build/src/github.com/docker/docker/vendor/golang.org/x/net/context/ctxhttp/ctxhttp.go:48 +0x39
created by github.com/docker/docker/vendor/golang.org/x/net/context/ctxhttp.Do
/home/ubuntu/telegraf-build/src/github.com/docker/docker/vendor/golang.org/x/net/context/ctxhttp/ctxhttp.go:51 +0xdd

goroutine 28 [select, 11 minutes, locked to thread]:
runtime.gopark(0x14bb3a8, 0x0, 0x143ad50, 0x6, 0x18, 0x2)
/usr/local/go/src/runtime/proc.go:271 +0x13a
runtime.selectgoImpl(0xc420222750, 0x0, 0x18)
/usr/local/go/src/runtime/select.go:423 +0x1364
runtime.selectgo(0xc420222750)
/usr/local/go/src/runtime/select.go:238 +0x1c
runtime.ensureSigM.func1()
/usr/local/go/src/runtime/signal_unix.go:434 +0x2dd
runtime.goexit()
/usr/local/go/src/runtime/asm_amd64.s:2197 +0x1

# rutina que recibe las signals del sistema para parar o reiniciarse
goroutine 29 [select, 11 minutes]:
main.reloadLoop.func1(0xc4202b61e0, 0xc4202b6180, 0xc42011e070, 0xc4202b6060)
/home/ubuntu/telegraf-build/src/github.com/influxdata/telegraf/cmd/telegraf/telegraf.go:195 +0x24a
created by main.reloadLoop
/home/ubuntu/telegraf-build/src/github.com/influxdata/telegraf/cmd/telegraf/telegraf.go:209 +0x6ec

# flusher monitors the metrics input channel and flushes on the minimum interval
# parece que es quien espera las respuestas de los inputs
goroutine 30 [select]:
github.com/influxdata/telegraf/agent.(*Agent).flusher(0xc42015a0e0, 0xc4202b6180, 0xc4202b63c0, 0xc4202b6420, 0x0, 0xa400000007)
/home/ubuntu/telegraf-build/src/github.com/influxdata/telegraf/agent/agent.go:320 +0x444
github.com/influxdata/telegraf/agent.(*Agent).Run.func1(0xc420206640, 0xc42015a0e0, 0xc4202b6180, 0xc4202b63c0, 0xc4202b6420)
/home/ubuntu/telegraf-build/src/github.com/influxdata/telegraf/agent/agent.go:396 +0x7a
created by github.com/influxdata/telegraf/agent.(*Agent).Run
/home/ubuntu/telegraf-build/src/github.com/influxdata/telegraf/agent/agent.go:400 +0x34f

# haciendo alguna llamada http para alg√∫n plugin de input?
goroutine 37 [IO wait]:
net.runtime_pollWait(0x7f47c83ee9b8, 0x72, 0x4)
/usr/local/go/src/runtime/netpoll.go:164 +0x59
net.(*pollDesc).wait(0xc4200f6f48, 0x72, 0x1c1e8e0, 0x1c15898)
/usr/local/go/src/net/fd_poll_runtime.go:75 +0x38
net.(*pollDesc).waitRead(0xc4200f6f48, 0xc42023a000, 0x1000)
/usr/local/go/src/net/fd_poll_runtime.go:80 +0x34
net.(*netFD).Read(0xc4200f6ee0, 0xc42023a000, 0x1000, 0x1000, 0x0, 0x1c1e8e0, 0x1c15898)
/usr/local/go/src/net/fd_unix.go:250 +0x1b7
net.(*conn).Read(0xc42015a158, 0xc42023a000, 0x1000, 0x1000, 0x0, 0x0, 0x0)
/usr/local/go/src/net/net.go:181 +0x70
net/http.(*persistConn).Read(0xc42040c360, 0xc42023a000, 0x1000, 0x1000, 0x4, 0xc4200b1d40, 0x1e)
/usr/local/go/src/net/http/transport.go:1316 +0x14b
bufio.(*Reader).fill(0xc420156e40)
/usr/local/go/src/bufio/bufio.go:97 +0x117
bufio.(*Reader).Peek(0xc420156e40, 0x1, 0x0, 0x1, 0x0, 0xc4205ced80, 0x0)
/usr/local/go/src/bufio/bufio.go:129 +0x67
net/http.(*persistConn).readLoop(0xc42040c360)
/usr/local/go/src/net/http/transport.go:1474 +0x196
created by net/http.(*Transport).dialConn
/usr/local/go/src/net/http/transport.go:1117 +0xa35

goroutine 38 [select]:
net/http.(*persistConn).writeLoop(0xc42040c360)
/usr/local/go/src/net/http/transport.go:1704 +0x43a
created by net/http.(*Transport).dialConn
/usr/local/go/src/net/http/transport.go:1118 +0xa5a

# gatherer runs the inputs that have been configured with their own reporting interval.
# es el recubrimiento sobre gatherWithTimeout, que es quien realmente lanza los inputs y espera su finalizacion
goroutine 31 [select]:
github.com/influxdata/telegraf/agent.(*Agent).gatherer(0xc42015a0e0, 0xc4202b6180, 0xc420015140, 0x2540be400, 0xc4202b63c0)
/home/ubuntu/telegraf-build/src/github.com/influxdata/telegraf/agent/agent.go:129 +0x3a8
github.com/influxdata/telegraf/agent.(*Agent).Run.func3(0xc420206640, 0xc42015a0e0, 0xc4202b6180, 0xc4202b63c0, 0xc420015140, 0x2540be400)
/home/ubuntu/telegraf-build/src/github.com/influxdata/telegraf/agent/agent.go:422 +0x7d
created by github.com/influxdata/telegraf/agent.(*Agent).Run
/home/ubuntu/telegraf-build/src/github.com/influxdata/telegraf/agent/agent.go:423 +0x505

# Como el anterior
goroutine 32 [select]:
github.com/influxdata/telegraf/agent.(*Agent).gatherer(0xc42015a0e0, 0xc4202b6180, 0xc4200151c0, 0x2540be400, 0xc4202b63c0)
/home/ubuntu/telegraf-build/src/github.com/influxdata/telegraf/agent/agent.go:129 +0x3a8
github.com/influxdata/telegraf/agent.(*Agent).Run.func3(0xc420206640, 0xc42015a0e0, 0xc4202b6180, 0xc4202b63c0, 0xc4200151c0, 0x2540be400)
/home/ubuntu/telegraf-build/src/github.com/influxdata/telegraf/agent/agent.go:422 +0x7d
created by github.com/influxdata/telegraf/agent.(*Agent).Run
/home/ubuntu/telegraf-build/src/github.com/influxdata/telegraf/agent/agent.go:423 +0x505

# Como el anterior
goroutine 33 [select]:
github.com/influxdata/telegraf/agent.(*Agent).gatherer(0xc42015a0e0, 0xc4202b6180, 0xc420015240, 0x2540be400, 0xc4202b63c0)
/home/ubuntu/telegraf-build/src/github.com/influxdata/telegraf/agent/agent.go:129 +0x3a8
github.com/influxdata/telegraf/agent.(*Agent).Run.func3(0xc420206640, 0xc42015a0e0, 0xc4202b6180, 0xc4202b63c0, 0xc420015240, 0x2540be400)
/home/ubuntu/telegraf-build/src/github.com/influxdata/telegraf/agent/agent.go:422 +0x7d
created by github.com/influxdata/telegraf/agent.(*Agent).Run
/home/ubuntu/telegraf-build/src/github.com/influxdata/telegraf/agent/agent.go:423 +0x505

# Como el anterior
goroutine 50 [select]:
github.com/influxdata/telegraf/agent.(*Agent).gatherer(0xc42015a0e0, 0xc4202b6180, 0xc420015480, 0x2540be400, 0xc4202b63c0)
/home/ubuntu/telegraf-build/src/github.com/influxdata/telegraf/agent/agent.go:129 +0x3a8
github.com/influxdata/telegraf/agent.(*Agent).Run.func3(0xc420206640, 0xc42015a0e0, 0xc4202b6180, 0xc4202b63c0, 0xc420015480, 0x2540be400)
/home/ubuntu/telegraf-build/src/github.com/influxdata/telegraf/agent/agent.go:422 +0x7d
created by github.com/influxdata/telegraf/agent.(*Agent).Run
/home/ubuntu/telegraf-build/src/github.com/influxdata/telegraf/agent/agent.go:423 +0x505

# Como el anterior
goroutine 51 [select]:
github.com/influxdata/telegraf/agent.(*Agent).gatherer(0xc42015a0e0, 0xc4202b6180, 0xc420015540, 0x2540be400, 0xc4202b63c0)
/home/ubuntu/telegraf-build/src/github.com/influxdata/telegraf/agent/agent.go:129 +0x3a8
github.com/influxdata/telegraf/agent.(*Agent).Run.func3(0xc420206640, 0xc42015a0e0, 0xc4202b6180, 0xc4202b63c0, 0xc420015540, 0x2540be400)
/home/ubuntu/telegraf-build/src/github.com/influxdata/telegraf/agent/agent.go:422 +0x7d
created by github.com/influxdata/telegraf/agent.(*Agent).Run
/home/ubuntu/telegraf-build/src/github.com/influxdata/telegraf/agent/agent.go:423 +0x505

# Como el anterior
goroutine 52 [select]:
github.com/influxdata/telegraf/agent.(*Agent).gatherer(0xc42015a0e0, 0xc4202b6180, 0xc420015640, 0x2540be400, 0xc4202b63c0)
/home/ubuntu/telegraf-build/src/github.com/influxdata/telegraf/agent/agent.go:129 +0x3a8
github.com/influxdata/telegraf/agent.(*Agent).Run.func3(0xc420206640, 0xc42015a0e0, 0xc4202b6180, 0xc4202b63c0, 0xc420015640, 0x2540be400)
/home/ubuntu/telegraf-build/src/github.com/influxdata/telegraf/agent/agent.go:422 +0x7d
created by github.com/influxdata/telegraf/agent.(*Agent).Run
/home/ubuntu/telegraf-build/src/github.com/influxdata/telegraf/agent/agent.go:423 +0x505

# Como el anterior
goroutine 53 [select]:
github.com/influxdata/telegraf/agent.(*Agent).gatherer(0xc42015a0e0, 0xc4202b6180, 0xc4200156c0, 0x2540be400, 0xc4202b63c0)
/home/ubuntu/telegraf-build/src/github.com/influxdata/telegraf/agent/agent.go:129 +0x3a8
github.com/influxdata/telegraf/agent.(*Agent).Run.func3(0xc420206640, 0xc42015a0e0, 0xc4202b6180, 0xc4202b63c0, 0xc4200156c0, 0x2540be400)
