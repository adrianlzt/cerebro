# Pod simple al que podemos conectar
kind: Pod
apiVersion: v1
metadata:
  name: task-pod
spec:
  containers:
    - name: task-container
      image: busybox
      command:
        - sleep
        - infinity
---
# Privileged y en un nodo concreto:
apiVersion: v1
kind: Pod
metadata:
  name: "${capture_pod}"
spec:
  hostNetwork: true
  containers:
  nodeName: ${node}
  - name: capturer
    image: sysdig/sysdig
    args:
      - /bin/bash
      - "-c"
      - "echo '* Capturing system calls'; sysdig ${sysdig_params}; touch /.finished; trap 'exit 0' TERM; sleep infinity & wait \$!"
    imagePullPolicy: IfNotPresent
    securityContext:
      privileged: true
    env:
      - name: SYSDIG_BPF_PROBE
        value:
    resources:
      requests:
        cpu: 100m
        memory: 64Mi
      limits:
        cpu: 100m
        memory: 128Mi
    volumeMounts:
    - mountPath: /host/var/run/docker.sock
      name: docker-socket
    - mountPath: /host/dev
      name: dev-fs
    - mountPath: /host/proc
      name: proc-fs
      readOnly: true
    - mountPath: /host/boot
      name: boot-fs
      readOnly: true
    - mountPath: /host/lib/modules
      name: lib-modules
      readOnly: true
    - mountPath: /host/usr
      name: usr-fs
      readOnly: true
    - mountPath: /dev/shm
      name: dshm
    - mountPath: /host/etc
      name: etc-fs
      readOnly: true
  volumes:
  - name: dshm
    emptyDir:
      medium: Memory
  - name: docker-socket
    hostPath:
      path: /var/run/docker.sock
  - name: dev-fs
    hostPath:
      path: /dev
  - name: proc-fs
    hostPath:
      path: /proc
  - name: boot-fs
    hostPath:
      path: /boot
  - name: lib-modules
    hostPath:
      path: /lib/modules
  - name: usr-fs
    hostPath:
      path: /usr
  - name: etc-fs
    hostPath:
      path: /etc

